<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cw.cramer.auth.dao.SysRoleDAO">
  <resultMap id="BaseResultMap" type="com.cw.cramer.auth.entity.SysRole">
    <id column="role_id" jdbcType="INTEGER" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="name" />
    <result column="role_code" jdbcType="VARCHAR" property="code" />
    <result column="role_type" jdbcType="INTEGER" property="type" />
    <result column="role_status" jdbcType="INTEGER" property="status" />
    <result column="role_parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="role_department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="role_sort" jdbcType="INTEGER" property="sort" />
    <result column="role_create_by" jdbcType="INTEGER" property="createBy" />
    <result column="role_create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="role_update_by" jdbcType="INTEGER" property="updateBy" />
    <result column="role_update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="role_remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
    <collection property="authorityIds" ofType="java.lang.Integer" column="role_id">  
        <id column="authority_id" property="id"/>  
    </collection>
    <collection property="authorities" ofType="com.cw.cramer.auth.entity.SysAuthority" column="role_id">  
        <id column="authority_id" jdbcType="INTEGER" property="id" />
	    <result column="authority_name" jdbcType="VARCHAR" property="name" />
	    <result column="authority_code" jdbcType="VARCHAR" property="code" />
	    <result column="authority_type" jdbcType="INTEGER" property="type" />
	    <result column="authority_status" jdbcType="INTEGER" property="status" />
	    <result column="authority_parent_id" jdbcType="INTEGER" property="parentId" />
	    <result column="authority_href" jdbcType="VARCHAR" property="href" />
	    <result column="authority_target" jdbcType="VARCHAR" property="target" />
	    <result column="authority_icon" jdbcType="VARCHAR" property="icon" />
	    <result column="authority_sort" jdbcType="INTEGER" property="sort" />
	    <result column="authority_create_by" jdbcType="INTEGER" property="createBy" />
	    <result column="authority_create_time" jdbcType="TIMESTAMP" property="createTime" />
	    <result column="authority_update_by" jdbcType="INTEGER" property="updateBy" />
	    <result column="authority_update_time" jdbcType="TIMESTAMP" property="updateTime" />
	    <result column="authority_remarks" jdbcType="VARCHAR" property="remarks" />
    </collection> 
  </resultMap>
  
  <sql id="Joins">
		LEFT JOIN sys_department department ON role.department_id = department.id 
		LEFT JOIN sys_role_authority role_authority ON role.id = role_authority.role_id 
		LEFT JOIN sys_authority authority ON role_authority.authority_id = authority.id
  </sql>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role.id as role_id, role.name as role_name, role.code as role_code, role.type as role_type, 
    role.status as role_status, role.parent_id as role_parent_id, role.department_id as role_department_id, 
    role.sort as role_sort, role.create_by as role_create_by, role.create_time as role_create_time, 
    role.update_by as role_update_by, role.update_time as role_update_time, role.remarks as role_remarks,
    department.name as department_name,
    authority.id as authority_id, authority.name as authority_name, authority.code as authority_code
  </sql>
  <select id="selectByExample" parameterType="com.cw.cramer.auth.entity.SysRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_role role
    <include refid="Joins" />
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectIdByExample" parameterType="com.cw.cramer.auth.entity.SysRoleExample" resultType="java.lang.Integer">
    select
    <if test="distinct">
      distinct 
    </if>
    role.id 
    from sys_role role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role role
    <include refid="Joins" />
    where role.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cw.cramer.auth.entity.SysRoleExample">
    delete role from sys_role role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cw.cramer.auth.entity.SysRole">
    insert into sys_role (id, name, code, 
      type, status, parent_id, 
      department_id, sort, create_by, 
      create_time, update_by, update_time, 
      remarks)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, 
      #{departmentId,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{createBy,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cw.cramer.auth.entity.SysRole">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cw.cramer.auth.entity.SysRoleExample" resultType="java.lang.Long">
    select count(*) from sys_role role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_role role
    <set>
      <if test="record.id != null">
        role.id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        role.name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        role.code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        role.type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        role.status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null">
        role.parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.departmentId != null">
        role.department_id = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null">
        role.sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null">
        role.create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        role.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        role.update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        role.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null">
        role.remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_role role
    set role.id = #{record.id,jdbcType=INTEGER},
      role.name = #{record.name,jdbcType=VARCHAR},
      role.code = #{record.code,jdbcType=VARCHAR},
      role.type = #{record.type,jdbcType=INTEGER},
      role.status = #{record.status,jdbcType=INTEGER},
      role.parent_id = #{record.parentId,jdbcType=INTEGER},
      role.department_id = #{record.departmentId,jdbcType=INTEGER},
      role.sort = #{record.sort,jdbcType=INTEGER},
      role.create_by = #{record.createBy,jdbcType=INTEGER},
      role.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      role.update_by = #{record.updateBy,jdbcType=INTEGER},
      role.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      role.remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cw.cramer.auth.entity.SysRole">
    update sys_role
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cw.cramer.auth.entity.SysRole">
    update sys_role
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      department_id = #{departmentId,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectNextSortId" resultType="java.lang.Integer" >
  	select (case when max(sort) is NULL then 1 else max(sort)+1 end) from sys_role
  </select>
</mapper>